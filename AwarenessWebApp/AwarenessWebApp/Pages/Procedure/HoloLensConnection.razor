@layout MainLayout
@page "/hololensConnection"
@inject UserState UserState
@inject HttpClient HttpClient

<style>
    .shape-button {
        display: table-cell;
        background: #6368B0;
        width: 28rem;
        height: 28rem;
        border-radius: 23% 77% 65% 35% / 30% 44% 56% 70%;
        margin: 0 auto;
        vertical-align: middle;
    }

    .shape-button-invert {
        display: table-cell;
        background: #ffffff;
        width: 28rem;
        height: 28rem;
        border-radius: 23% 77% 65% 35% / 30% 44% 56% 70%;
        margin: 0 auto;
        vertical-align: middle;
        transform: rotateY(180deg);
    }

    .shape-button-invert:hover {
        background: #C2E0B1;
    }

    .xl-icon {
        transform: rotateY(180deg);
        vertical-align: middle;
        font-size: 10rem;
        color: #6368B0;
    }

    h1 {
        transform: rotateY(180deg);
        font-size: 2rem;
        color: #6368B0;
    }

    .center {
        margin: auto;
        width: 50%;
        padding: 10px;
    }
</style>
<AuthorizeView>
    <Authorized>
        <div class="container">
            <div class="row">
                <div class="col-lg-5 my-auto">
                    <div class="procedureSteps">
                        <ProcedureSteps />
                    </div>
                </div>
                <div class="col-lg-7 my-auto">
                    @if (holoLensServiceStatus)
                    {
                        @if (holoLensStatus == "disconnected")
                        {
                            <div class="shape-button">
                                <div class="shape-button-invert" @onclick="testHoloLensConnection">
                                    <center>
                                        <span class="oi oi-wifi xl-icon" aria-hidden="true" data-toggle="tooltip" title="Probar Conexión HoloLens"></span>
                                        <br />
                                        <h1>Probar Conexión con HoloLens®</h1>
                                    </center>
                                </div>
                            </div>
                        }
                        else if (holoLensStatus == "connecting")
                        {
                            <img src="./img/loadingButton-unscreen.gif" class="img-fluid center" />
                        }
                        else if (holoLensStatus == "connected")
                        {
                            <img src="./img/check.png" class="img-fluid center" />
                            <br />
                            <!-- <a class="btn btn-warning btn-lg btn-block" @onclick="disconnectHoloLens">Desconectar Gafas</a>-->
                        }
                        else
                        {
                            <!--
            <h2 style="text-align: center;"> ¿Seguro desea desconectar las gafas?</h2>
            <div class="d-flex justify-content-around bd-highlight">
                <a class="btn btn-success p-2 bd-highlight" @onclick="confirmDisconnectHoloLens"> Si</a>
                <div class="btn btn-danger p-2 bd-highlight" @onclick="cancelDisconnectHoloLens"> No</div>
            </div>-->
                        }
                    }
                    else
                    {
                        <h2>Error en el acceso al servicio de conexión con HoloLens</h2>
                    }
                </div>
            </div>
        </div>
    </Authorized>
</AuthorizeView>

@code {
    private string holoLensStatus = "disconnected";
    private bool holoLensServiceStatus;
    private string errorMessage;

    private async void testHoloLensConnection()
    {
        holoLensStatus = "connecting";
        var url = "https://hololenscommunicationserviceawareness.azurewebsites.net/api/hololens-communication-service/connect-hololens";
        HttpResponseMessage response_get = await HttpClient.GetAsync(url);
        if (response_get.IsSuccessStatusCode)
        {
            holoLensStatus = "connected";
        }
        else
        {
            errorMessage = response_get.ReasonPhrase;
            Console.WriteLine($"There was an error! {errorMessage}");
            return;
        }
    }
    private void disconnectHoloLens()
    {
        holoLensStatus = "confirmDisconnect";
    }
    private void confirmDisconnectHoloLens()
    {
        holoLensStatus = "disconnected";
    }
    private void cancelDisconnectHoloLens()
    {
        holoLensStatus = "connected";
    }
    protected override async Task OnInitializedAsync()
    {
        //Set active procedure step
        UserState.nextStepActive(3);
        var url = "https://hololenscommunicationserviceawareness.azurewebsites.net/api/hololens-communication-service/health-status";
        HttpResponseMessage response_get = await HttpClient.GetAsync(url);
        if (response_get.IsSuccessStatusCode)
        {
            holoLensStatus = "connected";
        }
        else
        {
            holoLensServiceStatus = false;
            errorMessage = response_get.ReasonPhrase;
            Console.WriteLine($"There was an error! {errorMessage}");
        }
    }
}
